// Code generated by MockGen. DO NOT EDIT.
// Source: extension.go
//
// Generated by this command:
//
//	mockgen -source=extension.go -destination=extension_mock_test.go -package=transport
//

// Package transport is a generated GoMock package.
package transport

import (
	context "context"
	json "encoding/json"
	reflect "reflect"

	a2a "github.com/mashiike/atlasic/a2a"
	gomock "go.uber.org/mock/gomock"
)

// MockExtension is a mock of Extension interface.
type MockExtension struct {
	ctrl     *gomock.Controller
	recorder *MockExtensionMockRecorder
	isgomock struct{}
}

// MockExtensionMockRecorder is the mock recorder for MockExtension.
type MockExtensionMockRecorder struct {
	mock *MockExtension
}

// NewMockExtension creates a new mock instance.
func NewMockExtension(ctrl *gomock.Controller) *MockExtension {
	mock := &MockExtension{ctrl: ctrl}
	mock.recorder = &MockExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExtension) EXPECT() *MockExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockExtension)(nil).GetMetadata))
}

// MockRPCMethodExtension is a mock of RPCMethodExtension interface.
type MockRPCMethodExtension struct {
	ctrl     *gomock.Controller
	recorder *MockRPCMethodExtensionMockRecorder
	isgomock struct{}
}

// MockRPCMethodExtensionMockRecorder is the mock recorder for MockRPCMethodExtension.
type MockRPCMethodExtensionMockRecorder struct {
	mock *MockRPCMethodExtension
}

// NewMockRPCMethodExtension creates a new mock instance.
func NewMockRPCMethodExtension(ctrl *gomock.Controller) *MockRPCMethodExtension {
	mock := &MockRPCMethodExtension{ctrl: ctrl}
	mock.recorder = &MockRPCMethodExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRPCMethodExtension) EXPECT() *MockRPCMethodExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockRPCMethodExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockRPCMethodExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockRPCMethodExtension)(nil).GetMetadata))
}

// MethodHandler mocks base method.
func (m *MockRPCMethodExtension) MethodHandler() JSONRPCMethodHandler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MethodHandler")
	ret0, _ := ret[0].(JSONRPCMethodHandler)
	return ret0
}

// MethodHandler indicates an expected call of MethodHandler.
func (mr *MockRPCMethodExtensionMockRecorder) MethodHandler() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MethodHandler", reflect.TypeOf((*MockRPCMethodExtension)(nil).MethodHandler))
}

// MethodName mocks base method.
func (m *MockRPCMethodExtension) MethodName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MethodName")
	ret0, _ := ret[0].(string)
	return ret0
}

// MethodName indicates an expected call of MethodName.
func (mr *MockRPCMethodExtensionMockRecorder) MethodName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MethodName", reflect.TypeOf((*MockRPCMethodExtension)(nil).MethodName))
}

// MockDataOnlyExtension is a mock of DataOnlyExtension interface.
type MockDataOnlyExtension struct {
	ctrl     *gomock.Controller
	recorder *MockDataOnlyExtensionMockRecorder
	isgomock struct{}
}

// MockDataOnlyExtensionMockRecorder is the mock recorder for MockDataOnlyExtension.
type MockDataOnlyExtensionMockRecorder struct {
	mock *MockDataOnlyExtension
}

// NewMockDataOnlyExtension creates a new mock instance.
func NewMockDataOnlyExtension(ctrl *gomock.Controller) *MockDataOnlyExtension {
	mock := &MockDataOnlyExtension{ctrl: ctrl}
	mock.recorder = &MockDataOnlyExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataOnlyExtension) EXPECT() *MockDataOnlyExtensionMockRecorder {
	return m.recorder
}

// EnrichAgentCard mocks base method.
func (m *MockDataOnlyExtension) EnrichAgentCard(builder *AgentCardBuilder) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnrichAgentCard", builder)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnrichAgentCard indicates an expected call of EnrichAgentCard.
func (mr *MockDataOnlyExtensionMockRecorder) EnrichAgentCard(builder any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnrichAgentCard", reflect.TypeOf((*MockDataOnlyExtension)(nil).EnrichAgentCard), builder)
}

// GetMetadata mocks base method.
func (m *MockDataOnlyExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockDataOnlyExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockDataOnlyExtension)(nil).GetMetadata))
}

// MockProfileExtension is a mock of ProfileExtension interface.
type MockProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockProfileExtensionMockRecorder
	isgomock struct{}
}

// MockProfileExtensionMockRecorder is the mock recorder for MockProfileExtension.
type MockProfileExtensionMockRecorder struct {
	mock *MockProfileExtension
}

// NewMockProfileExtension creates a new mock instance.
func NewMockProfileExtension(ctrl *gomock.Controller) *MockProfileExtension {
	mock := &MockProfileExtension{ctrl: ctrl}
	mock.recorder = &MockProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileExtension) EXPECT() *MockProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockProfileExtension)(nil).GetMetadata))
}

// PrepareContext mocks base method.
func (m *MockProfileExtension) PrepareContext(ctx context.Context, method string, params json.RawMessage) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareContext", ctx, method, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareContext indicates an expected call of PrepareContext.
func (mr *MockProfileExtensionMockRecorder) PrepareContext(ctx, method, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareContext", reflect.TypeOf((*MockProfileExtension)(nil).PrepareContext), ctx, method, params)
}

// MockSendMessageProfileExtension is a mock of SendMessageProfileExtension interface.
type MockSendMessageProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockSendMessageProfileExtensionMockRecorder
	isgomock struct{}
}

// MockSendMessageProfileExtensionMockRecorder is the mock recorder for MockSendMessageProfileExtension.
type MockSendMessageProfileExtensionMockRecorder struct {
	mock *MockSendMessageProfileExtension
}

// NewMockSendMessageProfileExtension creates a new mock instance.
func NewMockSendMessageProfileExtension(ctrl *gomock.Controller) *MockSendMessageProfileExtension {
	mock := &MockSendMessageProfileExtension{ctrl: ctrl}
	mock.recorder = &MockSendMessageProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendMessageProfileExtension) EXPECT() *MockSendMessageProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockSendMessageProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockSendMessageProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockSendMessageProfileExtension)(nil).GetMetadata))
}

// PrepareSendMessage mocks base method.
func (m *MockSendMessageProfileExtension) PrepareSendMessage(ctx context.Context, params *a2a.MessageSendParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareSendMessage", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareSendMessage indicates an expected call of PrepareSendMessage.
func (mr *MockSendMessageProfileExtensionMockRecorder) PrepareSendMessage(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareSendMessage", reflect.TypeOf((*MockSendMessageProfileExtension)(nil).PrepareSendMessage), ctx, params)
}

// MockSendStreamingMessageProfileExtension is a mock of SendStreamingMessageProfileExtension interface.
type MockSendStreamingMessageProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockSendStreamingMessageProfileExtensionMockRecorder
	isgomock struct{}
}

// MockSendStreamingMessageProfileExtensionMockRecorder is the mock recorder for MockSendStreamingMessageProfileExtension.
type MockSendStreamingMessageProfileExtensionMockRecorder struct {
	mock *MockSendStreamingMessageProfileExtension
}

// NewMockSendStreamingMessageProfileExtension creates a new mock instance.
func NewMockSendStreamingMessageProfileExtension(ctrl *gomock.Controller) *MockSendStreamingMessageProfileExtension {
	mock := &MockSendStreamingMessageProfileExtension{ctrl: ctrl}
	mock.recorder = &MockSendStreamingMessageProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendStreamingMessageProfileExtension) EXPECT() *MockSendStreamingMessageProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockSendStreamingMessageProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockSendStreamingMessageProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockSendStreamingMessageProfileExtension)(nil).GetMetadata))
}

// PrepareSendStreamingMessage mocks base method.
func (m *MockSendStreamingMessageProfileExtension) PrepareSendStreamingMessage(ctx context.Context, params *a2a.MessageSendParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareSendStreamingMessage", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareSendStreamingMessage indicates an expected call of PrepareSendStreamingMessage.
func (mr *MockSendStreamingMessageProfileExtensionMockRecorder) PrepareSendStreamingMessage(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareSendStreamingMessage", reflect.TypeOf((*MockSendStreamingMessageProfileExtension)(nil).PrepareSendStreamingMessage), ctx, params)
}

// MockGetTaskProfileExtension is a mock of GetTaskProfileExtension interface.
type MockGetTaskProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockGetTaskProfileExtensionMockRecorder
	isgomock struct{}
}

// MockGetTaskProfileExtensionMockRecorder is the mock recorder for MockGetTaskProfileExtension.
type MockGetTaskProfileExtensionMockRecorder struct {
	mock *MockGetTaskProfileExtension
}

// NewMockGetTaskProfileExtension creates a new mock instance.
func NewMockGetTaskProfileExtension(ctrl *gomock.Controller) *MockGetTaskProfileExtension {
	mock := &MockGetTaskProfileExtension{ctrl: ctrl}
	mock.recorder = &MockGetTaskProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetTaskProfileExtension) EXPECT() *MockGetTaskProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockGetTaskProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockGetTaskProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockGetTaskProfileExtension)(nil).GetMetadata))
}

// PrepareGetTask mocks base method.
func (m *MockGetTaskProfileExtension) PrepareGetTask(ctx context.Context, params *a2a.TaskQueryParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareGetTask", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareGetTask indicates an expected call of PrepareGetTask.
func (mr *MockGetTaskProfileExtensionMockRecorder) PrepareGetTask(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareGetTask", reflect.TypeOf((*MockGetTaskProfileExtension)(nil).PrepareGetTask), ctx, params)
}

// MockCancelTaskProfileExtension is a mock of CancelTaskProfileExtension interface.
type MockCancelTaskProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockCancelTaskProfileExtensionMockRecorder
	isgomock struct{}
}

// MockCancelTaskProfileExtensionMockRecorder is the mock recorder for MockCancelTaskProfileExtension.
type MockCancelTaskProfileExtensionMockRecorder struct {
	mock *MockCancelTaskProfileExtension
}

// NewMockCancelTaskProfileExtension creates a new mock instance.
func NewMockCancelTaskProfileExtension(ctrl *gomock.Controller) *MockCancelTaskProfileExtension {
	mock := &MockCancelTaskProfileExtension{ctrl: ctrl}
	mock.recorder = &MockCancelTaskProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCancelTaskProfileExtension) EXPECT() *MockCancelTaskProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockCancelTaskProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockCancelTaskProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockCancelTaskProfileExtension)(nil).GetMetadata))
}

// PrepareCancelTask mocks base method.
func (m *MockCancelTaskProfileExtension) PrepareCancelTask(ctx context.Context, params *a2a.TaskIDParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareCancelTask", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareCancelTask indicates an expected call of PrepareCancelTask.
func (mr *MockCancelTaskProfileExtensionMockRecorder) PrepareCancelTask(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareCancelTask", reflect.TypeOf((*MockCancelTaskProfileExtension)(nil).PrepareCancelTask), ctx, params)
}

// MockTaskResubscriptionProfileExtension is a mock of TaskResubscriptionProfileExtension interface.
type MockTaskResubscriptionProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockTaskResubscriptionProfileExtensionMockRecorder
	isgomock struct{}
}

// MockTaskResubscriptionProfileExtensionMockRecorder is the mock recorder for MockTaskResubscriptionProfileExtension.
type MockTaskResubscriptionProfileExtensionMockRecorder struct {
	mock *MockTaskResubscriptionProfileExtension
}

// NewMockTaskResubscriptionProfileExtension creates a new mock instance.
func NewMockTaskResubscriptionProfileExtension(ctrl *gomock.Controller) *MockTaskResubscriptionProfileExtension {
	mock := &MockTaskResubscriptionProfileExtension{ctrl: ctrl}
	mock.recorder = &MockTaskResubscriptionProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskResubscriptionProfileExtension) EXPECT() *MockTaskResubscriptionProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockTaskResubscriptionProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockTaskResubscriptionProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockTaskResubscriptionProfileExtension)(nil).GetMetadata))
}

// PrepareTaskResubscription mocks base method.
func (m *MockTaskResubscriptionProfileExtension) PrepareTaskResubscription(ctx context.Context, params *a2a.TaskIDParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareTaskResubscription", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareTaskResubscription indicates an expected call of PrepareTaskResubscription.
func (mr *MockTaskResubscriptionProfileExtensionMockRecorder) PrepareTaskResubscription(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareTaskResubscription", reflect.TypeOf((*MockTaskResubscriptionProfileExtension)(nil).PrepareTaskResubscription), ctx, params)
}

// MockSetTaskPushNotificationConfigProfileExtension is a mock of SetTaskPushNotificationConfigProfileExtension interface.
type MockSetTaskPushNotificationConfigProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockSetTaskPushNotificationConfigProfileExtensionMockRecorder
	isgomock struct{}
}

// MockSetTaskPushNotificationConfigProfileExtensionMockRecorder is the mock recorder for MockSetTaskPushNotificationConfigProfileExtension.
type MockSetTaskPushNotificationConfigProfileExtensionMockRecorder struct {
	mock *MockSetTaskPushNotificationConfigProfileExtension
}

// NewMockSetTaskPushNotificationConfigProfileExtension creates a new mock instance.
func NewMockSetTaskPushNotificationConfigProfileExtension(ctrl *gomock.Controller) *MockSetTaskPushNotificationConfigProfileExtension {
	mock := &MockSetTaskPushNotificationConfigProfileExtension{ctrl: ctrl}
	mock.recorder = &MockSetTaskPushNotificationConfigProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSetTaskPushNotificationConfigProfileExtension) EXPECT() *MockSetTaskPushNotificationConfigProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockSetTaskPushNotificationConfigProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockSetTaskPushNotificationConfigProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockSetTaskPushNotificationConfigProfileExtension)(nil).GetMetadata))
}

// PrepareSetTaskPushNotificationConfig mocks base method.
func (m *MockSetTaskPushNotificationConfigProfileExtension) PrepareSetTaskPushNotificationConfig(ctx context.Context, params *a2a.TaskPushNotificationConfig) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareSetTaskPushNotificationConfig", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareSetTaskPushNotificationConfig indicates an expected call of PrepareSetTaskPushNotificationConfig.
func (mr *MockSetTaskPushNotificationConfigProfileExtensionMockRecorder) PrepareSetTaskPushNotificationConfig(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareSetTaskPushNotificationConfig", reflect.TypeOf((*MockSetTaskPushNotificationConfigProfileExtension)(nil).PrepareSetTaskPushNotificationConfig), ctx, params)
}

// MockGetTaskPushNotificationConfigProfileExtension is a mock of GetTaskPushNotificationConfigProfileExtension interface.
type MockGetTaskPushNotificationConfigProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockGetTaskPushNotificationConfigProfileExtensionMockRecorder
	isgomock struct{}
}

// MockGetTaskPushNotificationConfigProfileExtensionMockRecorder is the mock recorder for MockGetTaskPushNotificationConfigProfileExtension.
type MockGetTaskPushNotificationConfigProfileExtensionMockRecorder struct {
	mock *MockGetTaskPushNotificationConfigProfileExtension
}

// NewMockGetTaskPushNotificationConfigProfileExtension creates a new mock instance.
func NewMockGetTaskPushNotificationConfigProfileExtension(ctrl *gomock.Controller) *MockGetTaskPushNotificationConfigProfileExtension {
	mock := &MockGetTaskPushNotificationConfigProfileExtension{ctrl: ctrl}
	mock.recorder = &MockGetTaskPushNotificationConfigProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetTaskPushNotificationConfigProfileExtension) EXPECT() *MockGetTaskPushNotificationConfigProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockGetTaskPushNotificationConfigProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockGetTaskPushNotificationConfigProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockGetTaskPushNotificationConfigProfileExtension)(nil).GetMetadata))
}

// PrepareGetTaskPushNotificationConfig mocks base method.
func (m *MockGetTaskPushNotificationConfigProfileExtension) PrepareGetTaskPushNotificationConfig(ctx context.Context, params *a2a.GetTaskPushNotificationConfigParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareGetTaskPushNotificationConfig", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareGetTaskPushNotificationConfig indicates an expected call of PrepareGetTaskPushNotificationConfig.
func (mr *MockGetTaskPushNotificationConfigProfileExtensionMockRecorder) PrepareGetTaskPushNotificationConfig(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareGetTaskPushNotificationConfig", reflect.TypeOf((*MockGetTaskPushNotificationConfigProfileExtension)(nil).PrepareGetTaskPushNotificationConfig), ctx, params)
}

// MockListTaskPushNotificationConfigProfileExtension is a mock of ListTaskPushNotificationConfigProfileExtension interface.
type MockListTaskPushNotificationConfigProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockListTaskPushNotificationConfigProfileExtensionMockRecorder
	isgomock struct{}
}

// MockListTaskPushNotificationConfigProfileExtensionMockRecorder is the mock recorder for MockListTaskPushNotificationConfigProfileExtension.
type MockListTaskPushNotificationConfigProfileExtensionMockRecorder struct {
	mock *MockListTaskPushNotificationConfigProfileExtension
}

// NewMockListTaskPushNotificationConfigProfileExtension creates a new mock instance.
func NewMockListTaskPushNotificationConfigProfileExtension(ctrl *gomock.Controller) *MockListTaskPushNotificationConfigProfileExtension {
	mock := &MockListTaskPushNotificationConfigProfileExtension{ctrl: ctrl}
	mock.recorder = &MockListTaskPushNotificationConfigProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockListTaskPushNotificationConfigProfileExtension) EXPECT() *MockListTaskPushNotificationConfigProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockListTaskPushNotificationConfigProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockListTaskPushNotificationConfigProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockListTaskPushNotificationConfigProfileExtension)(nil).GetMetadata))
}

// PrepareListTaskPushNotificationConfig mocks base method.
func (m *MockListTaskPushNotificationConfigProfileExtension) PrepareListTaskPushNotificationConfig(ctx context.Context, params *a2a.TaskIDParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareListTaskPushNotificationConfig", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareListTaskPushNotificationConfig indicates an expected call of PrepareListTaskPushNotificationConfig.
func (mr *MockListTaskPushNotificationConfigProfileExtensionMockRecorder) PrepareListTaskPushNotificationConfig(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareListTaskPushNotificationConfig", reflect.TypeOf((*MockListTaskPushNotificationConfigProfileExtension)(nil).PrepareListTaskPushNotificationConfig), ctx, params)
}

// MockDeleteTaskPushNotificationConfigProfileExtension is a mock of DeleteTaskPushNotificationConfigProfileExtension interface.
type MockDeleteTaskPushNotificationConfigProfileExtension struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteTaskPushNotificationConfigProfileExtensionMockRecorder
	isgomock struct{}
}

// MockDeleteTaskPushNotificationConfigProfileExtensionMockRecorder is the mock recorder for MockDeleteTaskPushNotificationConfigProfileExtension.
type MockDeleteTaskPushNotificationConfigProfileExtensionMockRecorder struct {
	mock *MockDeleteTaskPushNotificationConfigProfileExtension
}

// NewMockDeleteTaskPushNotificationConfigProfileExtension creates a new mock instance.
func NewMockDeleteTaskPushNotificationConfigProfileExtension(ctrl *gomock.Controller) *MockDeleteTaskPushNotificationConfigProfileExtension {
	mock := &MockDeleteTaskPushNotificationConfigProfileExtension{ctrl: ctrl}
	mock.recorder = &MockDeleteTaskPushNotificationConfigProfileExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteTaskPushNotificationConfigProfileExtension) EXPECT() *MockDeleteTaskPushNotificationConfigProfileExtensionMockRecorder {
	return m.recorder
}

// GetMetadata mocks base method.
func (m *MockDeleteTaskPushNotificationConfigProfileExtension) GetMetadata() a2a.AgentExtension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(a2a.AgentExtension)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockDeleteTaskPushNotificationConfigProfileExtensionMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockDeleteTaskPushNotificationConfigProfileExtension)(nil).GetMetadata))
}

// PrepareDeleteTaskPushNotificationConfig mocks base method.
func (m *MockDeleteTaskPushNotificationConfigProfileExtension) PrepareDeleteTaskPushNotificationConfig(ctx context.Context, params *a2a.DeleteTaskPushNotificationConfigParams) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareDeleteTaskPushNotificationConfig", ctx, params)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareDeleteTaskPushNotificationConfig indicates an expected call of PrepareDeleteTaskPushNotificationConfig.
func (mr *MockDeleteTaskPushNotificationConfigProfileExtensionMockRecorder) PrepareDeleteTaskPushNotificationConfig(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareDeleteTaskPushNotificationConfig", reflect.TypeOf((*MockDeleteTaskPushNotificationConfigProfileExtension)(nil).PrepareDeleteTaskPushNotificationConfig), ctx, params)
}
